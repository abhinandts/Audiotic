<!-- <div class="text-center mb-200 mt-100">
    <h3>Your order is Placed...</h3>
    <a href="/myAccount" class="btn mt-15 mr-10 hover-up">Show Orders</a>
    <a href="/home" class="btn mt-15 ml-10 hover-up " style="background-color: white; border-color: GREEN; color: green;">Continue Shopping</a>
</div> -->

<section class="mt-50 mb-50">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-6">
                <div class="order_review">
                    <div class="mb-20">
                        <h4 class="mb-10">Order Status : <span style="color: rgb(2, 112, 22);"> <strong>
                                    <%= order.status %>
                                </strong></span></h4>

                        <h5 class="mb-5">Payment Mode : <span>
                                <% if(order.isRazorpay){ %>
                                    Razorpay
                                    <%}else{ %>
                                        Cash on Delivery
                                        <% } %>
                            </span></h5>

                        <h5 class="mb-5">Payment :
                            <% if(order.payment){ %>
                                <span style="color: rgb(0, 231, 42);"> Paid </span>
                                <%}else{ %>
                                    <span style="color: rgb(255, 114, 5);">Payment pending</span>
                                    <% } %>
                        </h5>

                        <% if(order.isRazorpay && order.status=="Cancelled" ){ %>
                            <h5 class="mb-5">Refund :
                                <% if(order.refund){ %>
                                    <span style="color: rgb(0, 231, 42);"> Complete </span>
                                    <%}else{ %>
                                        <span style="color: rgb(255, 114, 5);">Refund pending</span>
                                        <% } %>
                            </h5>
                            <% } %>

                                <h6 style="padding-top: 10px; color: grey;">Order Id: <%= order.orderId %>
                                </h6>
                    </div>
                    <div class="table-responsive order_table text-center">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th colspan="2">Products</th>
                                    <th>Total</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% order.products.forEach(element=> { %>
                                    <tr>
                                        <td class="image product-thumbnail"><img
                                                src="/admin/productImages/<%= element.product.image[0] %>" alt="#"></td>
                                        <td>
                                            <h5><a href="shop-product-full.html">
                                                    <%= element.product.productName %>
                                                </a></h5>
                                            <span class="product-qty">x <%= element.quantity %></span>
                                        </td>
                                        <td>₹<%= element.price %>
                                        </td>
                                    </tr>
                                    <% }); %>
                                        <tr>
                                            <th>SubTotal</th>
                                            <td class="product-subtotal" colspan="2">₹<%= order.orderTotal %>
                                            </td>
                                        </tr>
                                        <tr>
                                            <th>Shipping</th>
                                            <td colspan="2"><em>
                                                    <%= order.shipping %>
                                                </em></td>
                                        </tr>
                                        <tr>
                                            <th>Total</th>
                                            <td colspan="2" class="product-subtotal"><span
                                                    class="font-xl text-brand fw-900">₹<%= order.orderTotal %>
                                                        .00/-</span></td>
                                        </tr>
                            </tbody>
                        </table>
                    </div>

                    <!-- Add Address Section Here -->
                    <div class="mb-20 mt-20">
                        <h4>Delivery Address</h4>
                        <div style="border: 1px solid #ddd; padding: 15px; border-radius: 5px;">
                            <p style="margin-bottom: 5px;"><strong>Address Name:</strong>
                                <%= order.address.addressName %>
                            </p>
                            <p style="margin-bottom: 5px;"><strong>Street:</strong>
                                <%= order.address.street %>
                            </p>
                            <p style="margin-bottom: 5px;"><strong>City:</strong>
                                <%= order.address.city %>
                            </p>
                            <p style="margin-bottom: 5px;"><strong>State:</strong>
                                <%= order.address.state %>
                            </p>
                            <p style="margin-bottom: 5px;"><strong>Pin Code:</strong>
                                <%= order.address.pinCode %>
                            </p>
                            <p style="margin-bottom: 0;"><strong>Country:</strong>
                                <%= order.address.country %>
                            </p>
                        </div>
                    </div>

                    <div class="border-color-1 mt-30 mb-30 p-20" style="display: flex; gap: 15px;">
                        <a href="/home" class="btn btn-light" id="cancelEditDialogButton"
                            style="background-color: azure; color: black; cursor: pointer;">Home</a>
                        <a href="/myAccount" class="btn" style="cursor: pointer;">Show Orders</a>


                        <% if(order.status==="Pending" || order.status==="Processing" || order.status==="Shipped" ){ %>
                            <button onclick="showCancellationDialog()" class="btn btn-secondary">Cancel Order</button>
                            <% } %>

                                <% if(order.status==="Delivered" ){ %>
                                    <button onclick="showReturnDialog()" class="btn btn-secondary">Return Order</button>
                                    <%} %>

                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script src="/scripts/header.js"></script>

<script>
    function showCancellationDialog() {
        Swal.fire({
            title: "Tell us your reason for canceling the order",
            input: "text",
            inputAttributes: {
                autocapitalize: "off"
            },
            showCancelButton: true,
            confirmButtonText: "Submit",
            showLoaderOnConfirm: true,
            preConfirm: (input) => {
                const trimmedInput = input.trim();

                if (trimmedInput.length === 0) {
                    Swal.showValidationMessage('This field cannot be empty');
                    return false;
                }

                if (trimmedInput.length < 10) {
                    Swal.showValidationMessage('Please enter at least 20 characters');
                    return false;
                }

                return trimmedInput;
            },
            allowOutsideClick: () => !Swal.isLoading()
        }).then((result) => {
            if (result.isConfirmed) {

                cancelOrder(result.value)
            }
        });
    }

    function cancelOrder(reason) {
        fetch('/api/order/cancelOrder', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                orderId: '<%= order._id %>', // Get the order ID from your EJS template
                reason: reason
            })
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        title: 'Order Canceled',
                        text: 'Your order has been successfully canceled.',
                        icon: 'success'
                    }).then(() => {
                        // Reload the page or redirect to update the UI
                        window.location.reload();
                    });
                } else {
                    Swal.fire({
                        title: 'Error',
                        text: 'There was a problem cancelling your order. Please try again.',
                        icon: 'error'
                    });
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    title: 'Error',
                    text: 'There was a problem communicating with the server. Please try again.',
                    icon: 'error'
                });
            });
    }

    function showReturnDialog() {
        Swal.fire({
            title: "Tell us your reason for Returning the order",
            input: "text",
            inputAttributes: {
                autocapitalize: "off"
            },
            showCancelButton: true,
            confirmButtonText: "Submit",
            showLoaderOnConfirm: true,
            preConfirm: (input) => {
                const trimmedInput = input.trim();

                if (trimmedInput.length === 0) {
                    Swal.showValidationMessage('This field cannot be empty');
                    return false;
                }

                if (trimmedInput.length < 10) {
                    Swal.showValidationMessage('Please enter at least 20 characters');
                    return false;
                }

                return trimmedInput;
            },
            allowOutsideClick: () => !Swal.isLoading()
        }).then((result) => {
            if (result.isConfirmed) {

                returnOrder(result.value)
            }
        });
    }

    function returnOrder(reason) {
        fetch('/api/order/returnOrder', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                orderId: '<%= order._id %>', // Get the order ID from your EJS template
                reason: reason
            })
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        title: 'Order Returned',
                        text: 'Payment will shortly reflect on your wallet.',
                        icon: 'success'
                    }).then(() => {
                        // Reload the page or redirect to update the UI
                        window.location.reload();
                    });
                } else {
                    Swal.fire({
                        title: 'Error',
                        text: 'There was a problem Returning your order. Please try again.',
                        icon: 'error'
                    });
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    title: 'Error',
                    text: 'There was a problem communicating with the server. Please try again.',
                    icon: 'error'
                });
            });
    }
</script>